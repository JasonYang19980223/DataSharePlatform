{"ast":null,"code":"import _regeneratorRuntime from \"/home/jason/jason_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jason/jason_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jason/jason_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jason/jason_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jason/jason_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jason/jason_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jason/jason_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jason/jason_project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jason/jason_project/src/components/Create.js\";\nimport React, { Component } from 'react';\nimport Storage from '../abis/Storage.json';\nimport web3 from './web3.js';\nimport Nbar from './Nbar.js';\nimport storage from './storage.js';\n\nvar Create =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Create, _Component);\n\n  /*async componentWillMount() {\n    await this.loadBlockchainData()\n  }\n   //檢查有沒有裝MetaMask\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.request({ method: 'eth_requestAccounts' })\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.ethereum)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n   async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Storage.networks[networkId]\n    console.log(networkData.address)\n    if(networkData) {\n      const storage =new web3.eth.Contract(Storage.abi, networkData.address)\n      this.setState({storage})\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.')\n    }\n  }*/\n  function Create(props) {\n    var _this;\n\n    _classCallCheck(this, Create);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Create).call(this, props));\n    _this.state = {\n      account: '',\n      num: 5,\n      submitNum: 0,\n      contract: storage\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Create, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState({\n        num: e.target.value\n      });\n    }\n  }, {\n    key: \"handleClick\",\n    value: function () {\n      var _handleClick = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setState({\n                  submitNum: this.state.num\n                });\n                _context.next = 3;\n                return this.state.contract.methods.store(parseInt(this.state.submitNum)).send({\n                  from: this.state.account\n                });\n\n              case 3:\n                console.log(this.state.submitNum);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleClick(_x) {\n        return _handleClick.apply(this, arguments);\n      }\n\n      return handleClick;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Nbar, {\n        account: this.state.account,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"create member\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"store num\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"storage: \", this.state.submitNum));\n    }\n  }]);\n\n  return Create;\n}(Component);\n\nexport default Create;","map":{"version":3,"sources":["/home/jason/jason_project/src/components/Create.js"],"names":["React","Component","Storage","web3","Nbar","storage","Create","props","state","account","num","submitNum","contract","handleChange","bind","handleClick","e","setState","target","value","methods","store","parseInt","send","from","console","log"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,OAAP,MAAoB,cAApB;;IAEMC,M;;;;;AAEJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,kBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXC,MAAAA,GAAG,EAAC,CAFO;AAGXC,MAAAA,SAAS,EAAC,CAHC;AAIXC,MAAAA,QAAQ,EAAEP;AAJC,KAAb;AAMA,UAAKQ,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,uDAAnB;AATgB;AAUjB;;;;iCAEYE,C,EAAG;AACd,WAAKC,QAAL,CAAc;AAACP,QAAAA,GAAG,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAf,OAAd;AACD;;;;;;gDAEiBH,C;;;;;AAChB,qBAAKC,QAAL,CAAc;AAACN,kBAAAA,SAAS,EAAC,KAAKH,KAAL,CAAWE;AAAtB,iBAAd;;uBACM,KAAKF,KAAL,CAAWI,QAAX,CAAoBQ,OAApB,CAA4BC,KAA5B,CAAkCC,QAAQ,CAAC,KAAKd,KAAL,CAAWG,SAAZ,CAA1C,EAAkEY,IAAlE,CAAuE;AAAEC,kBAAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC;AAAnB,iBAAvE,C;;;AACNgB,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKlB,KAAL,CAAWG,SAAvB;;;;;;;;;;;;;;;;;;6BAGO;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,OAAO,EAAE,KAAKH,KAAL,CAAWC,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAG,KAAKI,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,WAFR;AAGE,QAAA,OAAO,EAAE,KAAKE,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAc,KAAKP,KAAL,CAAWG,SAAzB,CAbF,CADF;AAiBD;;;;EA5EkBV,S;;AAgFrB,eAAeK,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport Storage from '../abis/Storage.json'\nimport web3 from './web3.js'\nimport Nbar from './Nbar.js';\nimport storage from './storage.js'\n\nclass Create extends Component {\n\n  /*async componentWillMount() {\n    await this.loadBlockchainData()\n  }\n\n  //檢查有沒有裝MetaMask\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.request({ method: 'eth_requestAccounts' })\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.ethereum)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Storage.networks[networkId]\n    console.log(networkData.address)\n    if(networkData) {\n      const storage =new web3.eth.Contract(Storage.abi, networkData.address)\n      this.setState({storage})\n    } else {\n      window.alert('Marketplace contract not deployed to detected network.')\n    }\n  }*/\n\n  constructor(props){\n    super(props)\n    this.state = {\n      account: '',\n      num:5,\n      submitNum:0,\n      contract :storage\n    }    \n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({num: e.target.value});\n  }\n\n  async handleClick(e) {\n    this.setState({submitNum:this.state.num})\n    await this.state.contract.methods.store(parseInt(this.state.submitNum)).send({ from: this.state.account })\n    console.log(this.state.submitNum);\n  }\n\n  render() {\n    return (\n      <div>\n        <Nbar account={this.state.account}/>\n        <h1>\n          create member\n        </h1>\n        <div>\n          <input type=\"text\" onChange={ this.handleChange } />\n          <input\n            type=\"button\"\n            value=\"store num\"\n            onClick={this.handleClick}\n          />\n        </div>\n        <h3>storage: {this.state.submitNum}</h3>\n      </div>\n    );\n  }\n}\n\n\nexport default Create;"]},"metadata":{},"sourceType":"module"}